services:
  remote-repo-server:
    build:
      context: ./remote-repo-server
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    env_file: './remote-repo-server/.env.docker'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    networks:
      - code-helper-network

  llm-server:
    build:
      context: ./llm-server
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    env_file: './llm-server/.env.docker'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8001/health']
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    networks:
      - code-helper-network

  general-server:
    build:
      context: ./general-server
      dockerfile: Dockerfile
    ports:
      - '8003:8003'
    env_file: './general-server/.env.docker'
    networks:
      - code-helper-network

  webhook:
    build:
      context: ./webhook
      dockerfile: Dockerfile
    ports:
      - '8004:8004'
    env_file: './webhook/.env.docker'
    networks:
      - code-helper-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  code-helper-network:
    driver: bridge
